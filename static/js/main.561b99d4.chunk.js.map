{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmit","this","className","type","required","placeholder","onChange","pattern","Component","Filter","filter","ContactListItem","onClick","ContactList","contacts","map","id","App","addContact","newContact","uuidv4","undefined","find","alert","deleteContact","contactId","filterContactsByName","getFilteredContacts","lowercasedFilter","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.561b99d4.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    const { name, number } = this.state;\r\n\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleFormSubmit}>\r\n        <label className=\"form-field\">\r\n          Name\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            required\r\n            placeholder=\"John Smith\"\r\n            onChange={this.handleInputChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label className=\"form-field\">\r\n          Number\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            required\r\n            placeholder=\"111-11-11\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            onChange={this.handleInputChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <button className=\"add-contact-button\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <label className=\"filter\">\r\n    Find contacts by name\r\n    <input\r\n      className=\"filter-input\"\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './ContactListItem.css';\r\n\r\nconst ContactListItem = ({ name, number, onClick }) => (\r\n  <li className=\"contact-list-item\">\r\n    <p className=\"contact-name\">{name}:</p>\r\n    <p className=\"contact-number\">{number}</p>\r\n    <button className=\"delete-contact-button\" type=\"button\" onClick={onClick}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nimport './ContactList.css';\r\n\r\nconst ContactList = ({ contacts, onClick }) => (\r\n  <ul className=\"contact-list\">\r\n    {contacts.map(({ name, number, id }) => (\r\n      <ContactListItem\r\n        name={name}\r\n        number={number}\r\n        key={id}\r\n        onClick={() => onClick(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = { name, number, id: uuidv4() };\n    const existedContactWithTheSameName = contacts.find(\n      ({ name }) => name === newContact.name,\n    );\n\n    if (existedContactWithTheSameName !== undefined) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  filterContactsByName = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const lowercasedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(lowercasedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div>\n        <h1 className=\"app-title\">Phonebook</h1>\n\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className=\"section-title\">Contacts</h2>\n\n        <Filter filter={filter} onChange={this.filterContactsByName} />\n\n        <ContactList contacts={filteredContacts} onClick={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}